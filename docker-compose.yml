version: '3'

services:
    nginx:
        image: 'nginx:alpine'
        ports:
            - '${APP_PORT:-8000}:80'
        volumes:
            - './:/var/www/html'
            - './docker/nginx/conf.d/:/etc/nginx/conf.d/'
        networks:
            - app-network
        depends_on:
            - php

    php:
        build:
            context: ./docker/php/8.2
            dockerfile: Dockerfile
            args:
                UID: ${UID}
                GID: ${GID}
        working_dir: /var/www/html
        volumes:
            - './:/var/www/html'
        depends_on:
            - pgsql
            - redis
        networks:
            - app-network

    pgsql:
        image: 'postgres:15'
        ports:
            - '${FORWARD_DB_PORT:-5432}:5432'
        environment:
            PGPASSWORD: '${DB_PASSWORD:-secret}'
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
        volumes:
            - 'pgsql:/var/lib/postgresql/data'
            - './docker/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
        networks:
            - app-network
        healthcheck:
            test: [ "CMD", "pg_isready", "-q", "-d", "${DB_DATABASE}", "-U", "${DB_USERNAME}" ]
            retries: 3
            timeout: 5s

    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'redis:/data'
        networks:
            - app-network
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]
            retries: 3
            timeout: 5s

    mailpit:
        image: 'axllent/mailpit:latest'
        ports:
            - '${FORWARD_MAILPIT_PORT:-1025}:1025'
            - '${FORWARD_MAILPIT_DASHBOARD_PORT:-8025}:8025'
        networks:
            - app-network

volumes:
    pgsql:
    redis:
        driver: local

networks:
    app-network:
        driver: bridge
